{
  "metadata": {
    "documentation": {
      "boto3": "https://boto3.readthedocs.org/en/latest/reference/services/s3.html#bucket",
      "api": "https://docs.aws.amazon.com/AmazonS3/latest/API/APIRest.html",
      "rules": "https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html",
      "encryption": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html",
      "accessPolicies": [
        "https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html",
        "https://docs.aws.amazon.com/AmazonS3/latest/dev/example-policies-s3.html#iam-policy-ex1",
        "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html"
      ]
    },
    "endpoints": {
      "s3": {
        "us-east-1": "s3.amazonaws.com",
        "us-east-2": "s3-us-east-2.amazonaws.com",
        "us-west-2": "s3-us-west-2.amazonaws.com",
        "us-west-1": "s3-us-west-1.amazonaws.com",
        "eu-west-1": "s3-eu-west-1.amazonaws.com",
        "eu-central-1": "s3-eu-central-1.amazonaws.com",
        "ap-southeast-1": "s3-ap-southeast-1.amazonaws.com",
        "ap-southeast-2": "s3-ap-southeast-2.amazonaws.com",
        "ap-northeast-1": "s3-ap-northeast-1.amazonaws.com",
        "sa-east-1": "s3-sa-east-1.amazonaws.com"
      },
      "glacier": {
        "us-east-1": "glacier.us-east-1.amazonaws.com",
        "us-east-2": "glacier.us-east-2.amazonaws.com",
        "us-west-2": "glacier.us-west-2.amazonaws.com",
        "us-west-1": "glacier.us-west-1.amazonaws.com",
        "eu-west-1": "glacier.eu-west-1.amazonaws.com",
        "eu-central-1": "glacier.eu-central-1.amazonaws.com",
        "ap-southeast-2": "glacier.ap-southeast-2.amazonaws.com",
        "ap-northeast-1": "glacier.ap-northeast-1.amazonaws.com"
      }
    },
    "limits": {
      "max_buckets_per_account": 100,
      "metadata_max_bytes": 2024,
      "record_max_bytes": 5060000000,
      "record_optimal_bytes": 100000000,
      "get_requests_per_second": 800
    }
  },
  "schema": {
    "bucket_name": "org-project-collection-main",
    "access_control": "private",
    "version_control": true,
    "log_destination": {
      "name": "org-project-collection-logs",
      "prefix": ""
    },
    "lifecycle_rules": [ {
      "action": "delete",
      "prefix": "string",
      "longevity": 2,
      "current_version": true
    } ],
    "tag_list": [ { "key": "Env", "value": "test"} ],
    "notification_settings": [ {
      "service": "sns",
      "arn": "arn:aws:lambda:us-west-2:1234567890:policy-name",
      "event": "s3:ObjectCreated:*",
      "filters": {
        "prefix": "start_of_key/",
        "suffix": "/end_of_key.ext"
      }
    } ],
    "region_replication": {},
    "access_policy": {},
    "prefix": "start_of_key/",
    "delimiter": "/end_of_key.ext",
    "max_results": 1,
    "starting_key": "test/record/data.json",
    "starting_version": "abcDEF0123ghiJKL4567mnoPQR89",
    "record_key": "test/record/data.json",
    "record_version": "abcDEF0123ghiJKL4567mnoPQR89",
    "secret_key": "abcdef0123456789abcdef0123456789",
    "record_metadata": {},
    "record_mimetype": "application/json",
    "record_encoding": "gzip",
    "metadata_keys": "location",
    "metadata_values": "database",
    "export_path": "data/",
    "import_path": "data/"
  },
  "components": {
    ".bucket_name": {
      "must_not_contain": [ "[^a-z0-9\\-\\.]+", "^\\.", "\\.$", "\\.\\.", "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}" ],
      "min_length": 3,
      "max_length": 63,
      "field_metadata": {
        "notes": [
          "SSL wild card certs only match buckets with no '.' characters.",
          "bucket name cannot conflict with any other bucket in AWS.",
          "http://[bucket-name].S3.amazonaws.com/[key]" ]
      }
    },
    ".access_control": {
      "discrete_values": [ 
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "log-delivery-write"
      ]
    },
    ".log_destination.name": {
      "must_not_contain": [ "[^a-z0-9\\-\\.]+", "^\\.", "\\.$", "\\.\\.", "\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}" ],
      "min_length": 3,
      "max_length": 63
    },
    ".log_destination.prefix": {
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".lifecycle_rules[0].action": {
      "discrete_values": [
        "delete", "archive"
      ]
    },
    ".lifecycle_rules[0].longevity": {
      "integer_data": true
    },
    ".tag_list": {
      "max_size": 10
    },
    ".tag_list[0].key": {
      "max_length": 127,
      "must_not_contain": [ "aws:", "[^\\w\\s\\-\\._:/]+" ]
    },
    ".tag_list[0].value": {
      "max_length": 255,
      "must_not_contain": [ "aws:", "[^\\w\\s\\-\\._:/]+" ]
    },
    ".notification_settings[0].service": {
      "discrete_values": [ "sns", "sqs", "lambda" ]
    },
    ".notification_settings[0].arn": {
      "must_contain": [ "^arn:aws:" ]
    },
    ".notification_settings[0].event": {
      "discrete_values": [
        "s3:ReducedRedundancyLostObject",
        "s3:ObjectCreated:*",
        "s3:ObjectCreated:Put",
        "s3:ObjectCreated:Post",
        "s3:ObjectCreated:Copy",
        "s3:ObjectCreated:CompleteMultipartUpload",
        "s3:ObjectRemoved:*",
        "s3:ObjectRemoved:Delete",
        "s3:ObjectRemoved:DeleteMarkerCreated"
      ]
    },
    ".notification_settings[0].filters.prefix": {
      "required_field": false,
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".notification_settings[0].filters.suffix": {
      "required_field": false,
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".prefix": {
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".delimiter": {
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".max_results": {
      "integer_data": true,
      "min_value": 1,
      "max_value": 1000
    },
    ".starting_key": {
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".record_key": {
      "min_length": 1,
      "max_length": 1024,
      "must_not_contain": [ "[^\\w\\-\\.\\*_'!\\(\\)/]+" ]
    },
    ".secret_key": {
      "max_length": 256,
      "must_not_contain": [ "[^\\x00-\\x7F]+" ]
    },
    ".metadata_keys": {
      "must_not_contain": [ "^x-amz-meta-" ]
    }
  }
}